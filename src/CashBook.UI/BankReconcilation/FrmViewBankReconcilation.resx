<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnViewDetails.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>